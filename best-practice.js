// @ts-check

/** @type {import("eslint").Linter.Config} */
const config = {
  rules: {
    'array-callback-return': ['error', { allowImplicit: true }],
    'block-scoped-var': ['error'],
    curly: ['warn', 'multi-line'],
    'default-case-last': ['error'],
    eqeqeq: ['off'],
    'grouped-accessor-pairs': ['error'],
    'no-alert': ['error'],
    'no-caller': ['error'],
    'no-constructor-return': ['error'],
    'no-else-return': ['warn'],
    'no-eval': ['error'],
    'no-extend-native': ['error'],
    'no-extra-bind': ['error'],
    'no-extra-label': ['error'],
    'no-floating-decimal': ['error'],
    'no-implicit-coercion': ['error'],
    'no-implied-eval': ['error'],
    'no-iterator': ['error'],
    'no-labels': ['error'],
    'no-lone-blocks': ['error'],
    'no-new': ['error'],
    'no-new-func': ['error'],
    'no-new-wrappers': ['error'],
    'no-octal-escape': ['error'],
    'no-param-reassign': ['error'],
    'no-proto': ['error'],
    'no-return-assign': ['error'],
    'no-return-await': ['error'],
    'no-script-url': ['error'],
    'no-self-compare': ['error'],
    'no-sequences': ['error'],
    'no-useless-call': ['error'],
    'no-useless-concat': ['error'],
    'no-useless-return': ['warn'],
    'prefer-named-capture-group': ['warn'],
    'prefer-promise-reject-errors': ['error', { allowEmptyReject: true }],
    'prefer-regex-literals': ['error'],
    yoda: ['warn'],
    // ERRORS
    'no-await-in-loop': ['error'],
    'no-console': ['warn'],
    'no-constant-binary-expression': ['warn'],
    'no-promise-executor-return': ['error'],
    'no-template-curly-in-string': ['error'],
    'no-unreachable-loop': ['error'],
    // ES6
    'no-useless-computed-key': ['warn'],
    'no-useless-rename': ['warn'],
    'no-var': ['error'],
    'object-shorthand': ['warn'],
    'prefer-const': ['warn'],
    'prefer-numeric-literals': ['error'],
    'prefer-rest-params': ['error'],
    'prefer-spread': ['error'],
    'prefer-template': ['warn'],
    'symbol-description': ['error'],
  },
};

module.exports = config;
